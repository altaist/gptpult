<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;

class TelegramStatus extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'telegram:status';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $botToken = config('telegram.bot_token');
        $botUsername = config('telegram.bot_username');
        $webhookUrl = config('telegram.webhook_url');

        if (!$botToken) {
            $this->error('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env —Ñ–∞–π–ª–µ');
            return 1;
        }

        $this->info('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Telegram –±–æ—Ç–∞...');
        $this->newLine();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        $url = "https://api.telegram.org/bot{$botToken}/getMe";
        
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $url);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        
        $response = curl_exec($ch);
        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
        curl_close($ch);

        if ($response === false || $httpCode !== 200) {
            $this->error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ Telegram API');
            return 1;
        }

        $botInfo = json_decode($response, true);

        if ($botInfo['ok']) {
            $bot = $botInfo['result'];
            $this->info("‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @{$bot['username']}");
            $this->info("   –ò–º—è: {$bot['first_name']}");
            $this->info("   ID: {$bot['id']}");
        } else {
            $this->error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ –æ—Ç Telegram API');
            return 1;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
        $webhookInfoUrl = "https://api.telegram.org/bot{$botToken}/getWebhookInfo";
        
        $ch = curl_init();
        curl_setopt($ch, CURLOPT_URL, $webhookInfoUrl);
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        
        $response = curl_exec($ch);
        curl_close($ch);

        if ($response !== false) {
            $webhookInfo = json_decode($response, true);
            
            if ($webhookInfo['ok']) {
                $webhook = $webhookInfo['result'];
                
                if (!empty($webhook['url'])) {
                    $this->info("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {$webhook['url']}");
                    $this->info("   –û–∂–∏–¥–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: " . ($webhook['has_custom_certificate'] ? '–î–∞' : '–ù–µ—Ç'));
                    if (isset($webhook['pending_update_count'])) {
                        $this->info("   –û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {$webhook['pending_update_count']}");
                    }
                } else {
                    $this->warn('‚ö†Ô∏è  Webhook –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
                    $this->info('   –í—ã–ø–æ–ª–Ω–∏—Ç–µ: php artisan telegram:set-webhook');
                }
            }
        }

        $this->newLine();
        $this->info('üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏:');
        $this->info("   Bot Username: {$botUsername}");
        $this->info("   Webhook URL: {$webhookUrl}");
        $this->info("   –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞: https://t.me/{$botUsername}");

        return 0;
    }
}
